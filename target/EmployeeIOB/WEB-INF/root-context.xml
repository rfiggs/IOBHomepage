<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd 
 http://www.springframework.org/schema/security 
 http://www.springframework.org/schema/security/spring-security.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/cache
 http://www.springframework.org/schema/cache/spring-cache.xsd
 ">

 	<context:property-placeholder location = "classpath:/IOB.properties" />
 
 	<bean id = "serviceProperties" class ="org.springframework.security.cas.ServiceProperties">
 		<property name="service" value = "http://localhost:8080/EmployeeIOB/j_spring_cas_security_check"/>
 		<property name="sendRenew" value="true"/>
 	</bean>
 	
 	<security:http entry-point-ref ="casEntryPoint" use-expressions ="true">
 		<security:intercept-url pattern="/" access="permitAll"/>
 		<security:intercept-url pattern="/gate" access="permitAll" />
		<!--<security:intercept-url pattern="/*" access="permitAll" />-->
 		<security:intercept-url pattern="/*" access="hasRole('ROLE_UH')"/>
 		<security:custom-filter position ="CAS_FILTER" ref ="casFilter"/>
 	</security:http>
 
 	<bean id ="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
 		<property name="authenticationManager" ref="authenticationManager"/>
 	</bean>
 	
 	<bean id ="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
 		<property name = "loginUrl" value="${Login_Url}"/>
 		<property name ="serviceProperties" ref="serviceProperties"/>
 	</bean>
 
 	<security:authentication-manager alias ="authenticationManager">
 		<security:authentication-provider ref ="casAuthenticationProvider"/>
 	</security:authentication-manager>
 	
 	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
 		<property name="authenticationUserDetailsService" ref="EmployeeIOBUserDetailsService"/>
 		<property name="serviceProperties" ref ="serviceProperties"/>
 		<property name= "ticketValidator">
 			<bean class ="${Validator}">
 				<constructor-arg index="0" value="${Base_Url}"/>
 			</bean>
 		</property>
 		<property name="key" value="an_id_for_this_auth_provider_only"/>
 	</bean>
 
 	<bean id="EmployeeIOBUserDetailsService" class="edu.hawaii.its.EmployeeIOB.access.UserDetailsServiceImpl" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
         and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.connection.shutdown">true</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/iob20160420?useSLL=false"/>
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<cache:annotation-driven/>

	<!-- Generic cache manager. -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="messages"/>
			</set>
		</property>
	</bean>

</beans>